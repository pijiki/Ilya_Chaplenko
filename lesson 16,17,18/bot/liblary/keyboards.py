from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardButton, InlineKeyboardMarkup

from database import *

def generate_phone_button():
    return ReplyKeyboardMarkup(
        [
            [KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç", request_contact=True)]
        ], resize_keyboard=True
    )

def generate_main_menu():
    return ReplyKeyboardMarkup(
        [
            [KeyboardButton(text='‚úÖ –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')],
            [KeyboardButton(text='üìí –ò—Å—Ç–æ—Ä–∏—è'), KeyboardButton(text='üõí –ö–æ—Ä–∑–∏–Ω–∫–∞'), KeyboardButton(text='‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏')]
        ], resize_keyboard=True
    )

def back_to_main_menu():
    return ReplyKeyboardMarkup([
        [KeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')]
    ], resize_keyboard=True)

def generate_category_menu(cart_id):
    summary_price = get_sum_price_from_cart(cart_id)[0]
    categories = get_all_categories()

    markup = InlineKeyboardMarkup(row_width=2)
    markup.row(
    InlineKeyboardButton(text=f'–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∫–∞  ({summary_price if summary_price else 0} —Å—É–º–º)', callback_data='cart')
    )
    buttons = []
    for category in categories:
        bnt = InlineKeyboardButton(text=category[1], callback_data=f"category_{category[0]}")
        buttons.append(bnt)
    markup.add(*buttons)
    return markup


def generate_products_by_category(category_id):
    markup = InlineKeyboardMarkup(row_width=2)
    products = get_products_by_category(category_id)
    buttons = []
    for product in products:
        btn = InlineKeyboardButton(text=product[1], callback_data=f"product_{product[0]}")
        buttons.append(btn)
    markup.add(*buttons)
    markup.row(
    InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='–ù–∞–∑–∞–¥')
    )
    return markup

def admin_setings():
    return ReplyKeyboardMarkup(
        [
            [KeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é TODO')],
            [KeyboardButton(text='‚ûñ –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é TODO')],
            [KeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')]
        ], resize_keyboard=True
    )

def setings_user():
    markup = InlineKeyboardMarkup(row_width=3)
    markup.row(
        InlineKeyboardButton(text='‚å® –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫', callback_data='language'),
        InlineKeyboardButton(text='üìû –°–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä', callback_data='number')
    )
    return markup

def generate_product_price(quantity):
    markup = InlineKeyboardMarkup(row_width=3)
    number = quantity
    buttons = [
        InlineKeyboardButton(text='‚ûñ', callback_data='action -'),
        InlineKeyboardButton(text=f'{number}', callback_data=f'{number}'),
        InlineKeyboardButton(text='‚ûï', callback_data='action +'),
        InlineKeyboardButton(text='–ü–æ–ª–æ–∂–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É üòã', callback_data='put_into_cart')
    ]
    markup.add(*buttons)
    return markup


def back_to_menu():
    return ReplyKeyboardMarkup([
        [KeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥')]
    ], resize_keyboard=True)



def buy_food():
    markup = InlineKeyboardMarkup(row_width=3)
    button = [
        InlineKeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å', callback_data='buy')]
    markup.add(*button)
    return markup

def button (list_name):
    markup = InlineKeyboardMarkup(row_width=3)
    for name in list_name:
        buttons = [
            InlineKeyboardButton(text='‚ûñ', callback_data='order_action -'),
            InlineKeyboardButton(text='‚ùå', callback_data=f'delete_{name}'),
            InlineKeyboardButton(text='‚ûï', callback_data='order_action +'),
            ]
        markup.add(*buttons)
    return markup